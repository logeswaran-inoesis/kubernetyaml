version: '3.8'

services:
  django-app:
    container_name: ${CONTAINER_NAME}
    image: ${DJANGO_IMAGE}:${DJANGO_TAG}
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - postgres_django
      - redis
    environment:
      - DEBUG=${DEBUG}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=postgres_django
      - DATABASE_PORT=${DATABASE_PORT}  
      - KEYCLOAK_SERVER=${KEYCLOAK_SERVER}
      - KEYCLOAK_SERVER_URL=${KEYCLOAK_SERVER_URL}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_CLIENT_SECRET_KEY=${KEYCLOAK_CLIENT_SECRET_KEY}
      - KEYCLOAK_RETURN_URI=${KEYCLOAK_RETURN_URI}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - CACHE_URL=${CACHE_URL}
      - CELERY_URL=${CELERY_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_API_BASE=${OPENAI_API_BASE}
      - GUNICORN_CMD=${GUNICORN_CMD}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
    restart: unless-stopped
    command: >
      sh -c "$DJANGO_STARTUP_CMD && $GUNICORN_CMD & $CELERY_CMD & wait"
    networks:
      - backend

  nextjs-app:
    image: ${NEXTJS_IMAGE}:${NEXTJS_TAG}
    container_name: ${NEXTJS_CONTAINER_NAME}
    env_file:
      - .env
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXT_PUBLIC_SLACK_CLIENT_ID=${NEXT_PUBLIC_SLACK_CLIENT_ID}
      - NEXT_PUBLIC_SLACK_REDIRECT_URL=${NEXT_PUBLIC_SLACK_REDIRECT_URL}
    restart: unless-stopped
    networks:
      - backend

  postgres_django:
    container_name: postgres_django
    image: postgres:15
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - "5445:${DATABASE_PORT}"
    volumes:
      - postgres_django_data:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    container_name: redis_cache
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - backend

  postgres_keycloak:
    container_name: postgres_keycloak
    image: postgres:latest
    restart: unless-stopped
    ports:
      - "5433:5432"
    volumes:
      - postgres_keycloak_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${KEYCLOAK_DATABASE_NAME}
      - POSTGRES_USER=${KEYCLOAK_DATABASE_USER}
      - POSTGRES_PASSWORD=${KEYCLOAK_DATABASE_PASSWORD}
    networks:
      - backend

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.5
    container_name: keycloak_auth
    command: start-dev
    env_file:
      - .env
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres_keycloak:5432/${KEYCLOAK_DATABASE_NAME}
      - KC_DB_USERNAME=${KEYCLOAK_DATABASE_USER}
      - KC_DB_PASSWORD=${KEYCLOAK_DATABASE_PASSWORD}
      - KC_DB_SCHEMA=public
      - KC_HEALTH_ENABLED=true
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT_HTTPS=true
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - "8089:8080"
      - "8443:8443"
    restart: always
    volumes:
      - ./keycloak_data:/opt/keycloak/data
      - ./keycloak_config:/opt/keycloak/config
      - ./keycloak_realms:/opt/keycloak/realms
      - ./keycloak_themes:/opt/keycloak/themes
    depends_on:
      - postgres_keycloak
    networks:
      - backend

  nginx:
    image: nginx
    container_name: nginx_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./default.conf:/etc/nginx/conf.d/default.conf # Correct NGINX config file
    depends_on:
      - django-app
      - keycloak
      - nextjs-app
    networks:
      - backend

networks:
  backend:
    driver: bridge
volumes:
  postgres_keycloak_data:
    driver: local
  postgres_django_data:
    driver: local
