# -----------------------------------------------
# Persistent Volumes (PVs)
# -----------------------------------------------
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: gp2
  hostPath:
    path: "/mnt/kafka"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: zookeeper-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: gp2
  hostPath:
    path: "/mnt/zookeeper"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: zookeeper-datalog-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: gp2
  hostPath:
    path: "/mnt/zookeeper-datalog"

---
# -----------------------------------------------
# Persistent Volume Claims (PVCs)
# -----------------------------------------------
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-data
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp2
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zookeeper-data
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp2
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zookeeper-datalog
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp2
  resources:
    requests:
      storage: 5Gi

---
# -----------------------------------------------
# Zookeeper Service
# -----------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  ports:
    - port: 2181
      name: client
  clusterIP: None
  selector:
    app: zookeeper

---
# -----------------------------------------------
# Zookeeper StatefulSet
# -----------------------------------------------
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
spec:
  serviceName: "zookeeper"
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: wurstmeister/zookeeper:latest
          ports:
            - containerPort: 2181
          volumeMounts:
            - name: data
              mountPath: /var/lib/zookeeper
            - name: datalog
              mountPath: /datalog
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: zookeeper-data
        - name: datalog
          persistentVolumeClaim:
            claimName: zookeeper-datalog

---
# -----------------------------------------------
# Kafka Service
# -----------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  ports:
    - port: 9093
      name: broker
  clusterIP: None
  selector:
    app: kafka

---
# -----------------------------------------------
# Kafka StatefulSet
# -----------------------------------------------
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: "kafka"
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: wurstmeister/kafka:latest
          ports:
            - containerPort: 9093
          env:
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://:9093"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka:9093"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
          volumeMounts:
            - name: data
              mountPath: /var/lib/kafka/data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: kafka-data
